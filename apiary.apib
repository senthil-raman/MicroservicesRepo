FORMAT: 1A
HOST: http://10.180.218.217:8080

# AddressValMicroservices

Addressvalidation Microservice to add,delete,update records.

# Description Of Usual Server Responses:

- 200 `OK` - the request was successful (some API calls may return 201 instead).
- 201 `Created` - the request was successful and a resource was created.
- 204 `No Content` - the request was successful but there is no representation to return (i.e. the response is empty).
- 400 `Bad Request` - the request could not be understood or was missing required parameters.
- 401 `Unauthorized` - authentication failed or user doesn't have permissions for requested operation.
- 403 `Forbidden` - access denied.
- 404 `Not Found` - resource was not found.
- 405 `Method Not Allowed` - requested method is not supported for resource.


**address attributes:**

- id `(Number)` : unique identifier. 
- fname `(String)` : First Name.
- lname `(String)` : Last Name.
- email `(String)` : email id of the user.

---
## address Collection [/address({name},{email},{phone},{address},{city})]

### List all address [GET]

Retrieve paginated list of users.

+ Parameters
    + name: Senthil (string, required)
    + email: John@gmail.com (string, required)
    + phone: 9999999 (string, required)
    + address: Raymond Street (string, required)
    + city: Chennai (string, required)
    
 

+ Response 200 (application/json)

        [
            {
                "id": 1,
                "fname": "RAJA",
                "lname": "RAM",
                "email": "pandurang@email.com"
            },
            {
                "id": 2,
                "fname": "SHIV",
                "lname": "YADAV",
                "email": "SHIV@email.com"
            }
        ]

+ Response 401 (application/json)

        {
            "error": "error.unauthorized"
        }


## User [/users/{id}]
A single User object with all its details

+ Parameters
    + id (required, Number, `1`) ... Numeric `id` of the User to perform action with.

### Retrieve a address [GET]
+ Response 200 (application/json)

    + Header

            X-My-Header: The Value

    + Body

            {
                "id": 1,
                "fname": "Jayam",
                "lname": "Senthamarai",
                "email": "Jayam@email.com"
            }
            
+ Response 401 (application/json)

        {
            "error": "error.unauthorized"
        }

### Update a address [POST]
Update address details
+ Request (application/json)

        {
            "id": 1,
            "fname": "Jayam",
            "lname": "Senthamarai",
            "email": "jayam@email.com"
        }

+ Response 200 (application/json)

        {
            "id": 1,
            "fname": "Jayam",
            "lname": "Senthamarai",
            "email": "jayam@email.com"
        }

+ Response 401 (application/json)

        {
            "error": "error.unauthorized"
        }

### Remove a address [DELETE]
+ Response 204

+ Response 401 (application/json)

        {
            "error": "error.unauthorized"
        }